基础

进制转换
2进制转8/16进制 
    可将2进制数的3/4位为一组进行换算 (2进制小数点后同理计算 位数由高到低)
10进制转2/8/16 
    可将10进制数除以2/8/16 位数从低到高 余数为当前位值 商为除数重复上述动作 直至商为0
10进制浮点数转2进制
    整数部分同上
    小数部分做乘2处理 位数由高到低 结果整数部分为当前位 小数部分重复上述动作 直至结果为0 (可能无限循环)
    转换结果按照IEEE754标准保存 
    float  符号位(0为正1为负)+尾数(8位)+阶码(23位)
    double 符号位(0为正1为负)+尾数(11位)+阶码(52位)
    10101.0110101110001001001001..... = 1.01010110101110001001001001..... * 2^4(指数偏移值)
    float  0 + 10000010(127 + 4) + 01010110101110001001001(截取23位 精度丢失的原因)
    double 0 + 10000000011(1023 + 4) + 01010110101110001001001....(截取52位)
10进制浮点数转2进制以外进制 可先转成2进制再转成其他进制

2进制运算
与   相同为1 不同为0
或   有1为1 其他为0
异或 不同为1 相同为0
同或 相同为1 不同为0
左移(<< n) 向左移动n位 右侧补0
右移(>> n) 向右移动n位 左侧补0

操作系统

字节序
小端字节序
    数值高位在内存低位(计算机容易取数)
大端字节序
    数值高位在内存高位(符合书写习惯 符号位在内存第一位 计算机取数先取数值高位 有额外运算)
例 0x12345678
小端字节序 0x78 0x56 0x34 0x12
大端字节序 0x12 0x34 0x56 0x78

中断
外部硬件&软件(代码)通过INTR(外设通过此线传递信号)/NMI(外设发生灾难性事故)&调用中断指令(int 8位立即数/int3 调试中断/into 溢出中断/bound 越界检查中断/ud2 未知指令中断) 强制cpu执行中断信号在中断向量表/中断描述符中对应的函数
非异常类中断(如网卡 键盘等外设要求cpu读数据 into中断指令)可被eflag寄存器中IF位屏蔽(0屏蔽1正常)

into 溢出中断
    指在运算过程中 产生的结果无法在分配的空间内存放(如int由8位存放 两个int数值相加后超出了8位) 则溢出标志位OF被置为1 此时程序调用into指令且中断屏蔽位IF=1 会调用中断向量号为4的溢出中断程序(函数)

保护模式
32位cpu 将16位运行模式称为实模式 32位运行模式称为保护模式
实模式 段基址存放物理地址 直接操作内存物理地址
保护模式 段基址存放选择子 通过下标对应全局描述符表中的段描述符表的虚拟地址 寻址后由操作系统+cpu转换成真实物理地址
保护模式下 除段寄存器以外的寄存器(通用寄存器 指令指针寄存器 标志寄存器)均为32位 其低位复用16位cpu的寄存器 向高位扩展一个16位的寄存器
保护模式下 新加入段描述符缓冲寄存器 用来缓存内存中的段描述符或实模式下段基址的偏移结果

全局描述符表(GDT) 所以程序公共使用
局部描述符表(LDT) 多任务模式下 每个任务私有的描述符表 任务切换时需重新初始化 极少用到
段描述符 存在于GDT&LDT中
    每个元素64位 用来描述一个段基址信息 其中低32位描述段基址的0-15位和段界限的0-15位(最大偏移量 偏移单位) 高32位描述段基址的16-31位 段界限的16-19位和段的基本信息
    段基本信息包括  
    段偏移单位(G位) 计算段界限的实际值 0: 偏移单位为1字节 1: 偏移单位为4kb字节
    段描述符(type位 S位) type4个字节 标识段是否被访问(A位) 是否为一致性代码段(C位) 是否可读(R位) 是否可执行(X位)
                       S位1个字节 标识段为系统段(0 各种门)或数据段(1 各种代码段 软件运行地址)
    段特权级(DPL 2位) 包括0-3四级 0级权限最高 运行操作系统代码 用户代码一般在3级
    段存在描述(P位) 标识段是否在内存中存在 0: 不存在 1: 存在
    段可用性描述(AVL) 描述段是否可用
    段类型(L位) 描述段位32位或64位  0: 32位 1: 64位 32位cpu默认0
    D/B位 描述段内偏移地址和操作数大小 D位在代码段起效 0: 16位有效地址&操作数 1: 32位有效地址&操作数
                                  B位在栈段起效 0: 使用16位栈寄存器sp 1: 使用32位栈寄存器esp

保护模式保护策略
段寄存器加载选择子时保护 检查描述符表下标是否合法 段类型和寄存器类型是否匹配 段是否存在(P位)
数据段和代码段加载保护 检查段偏移量是否超过段界限
栈段保护 入栈时是否超过栈段界限 (向上扩展可访问段界限最后一个字节 向下扩展可访问段界限最后一个字节-1 防止段碰撞)

特权级

